import type {
  GetServerSidePropsContext,
  InferGetServerSidePropsType,
} from "next";
import Head from "next/head";
import { getProviders, useSession } from "next-auth/react";
import { getServerSession } from "next-auth/next";
import { authOptions } from "@/server/auth";
import Image from "next/image";
import RegisterModals from "@/components/modals/RegisterModals";
import LoginModals from "@/components/modals/LoginModals";
import { ReactElement } from "react";

export default function Login({
  providers,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const { data, status } = useSession();
  console.log(data, status);
  return (
    <>
      <Head>
        <title>Login Page</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen items-center justify-center bg-twitter-dark-gray">
        <RegisterModals providers={providers} />
        <LoginModals providers={providers} />
      </div>
    </>
  );
}
Login.getLayout = function getLayout(page: ReactElement) {
  return <div className="w-full">{page}</div>;
};
export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getServerSession(context.req, context.res, authOptions);

  // If the user is already logged in, redirect.
  // Note: Make sure not to redirect to the same page
  // To avoid an infinite loop!
  if (session) {
    return { redirect: { destination: "/" } };
  }

  const providers = await getProviders();

  return {
    props: { providers: providers ?? [] },
  };
}
